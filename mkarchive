#!/bin/bash
CONST_SCRIPTPATH="$(readlink -f "$0")"
CONST_SCRIPTNAME="$(basename "${CONST_SCRIPTPATH}" .sh)"
CONST_CODEBASEDIR="/code"

readonly CONST_SCRIPTPATH
readonly CONST_SCRIPTNAME
readonly CONST_CODEBASEDIR

# logging functions {{{
function logging()
{
  local priority="$1"; shift
  printf "%s [%s] %s\n" "$CONST_SCRIPTNAME" "${priority}" "$@" | \
    tee -a "${CONST_LOGFILE}"
}

function logging_err()
{
  logging "err" "$@"
}

function logging_info()
{
  logging "info" "$@"
}

function script_exit()
{
  local msg="$1"
  local retv="${2:-0}"
  if [ "$retv" = "0" ]
  then
    logging_info "$msg"
  else
    logging_err "$msg"
  fi
  exit "$retv"
}

# }}}

#------------------------------------------------------------------------------#
#                                    Main                                      #
#------------------------------------------------------------------------------#

logging_info "start"

SW_SRCDIR=$1; shift
SW_DSTDIR=$1; shift
SW_UID=$1; shift
SW_GID=$1; shift

pushd "${SW_DSTDIR}" || script_exit "cannot change to destdir" 1
tar -z -c -f "${CONST_CODEBASEDIR}/build.tar.gz" .
popd || script_exit "cannot change to original dir" 1

chown "${SW_UID}:${SW_GID}" "${CONST_CODEBASEDIR}/build.tar.gz"

script_exit "end"
#------------------------------------------------------------------------------#
#                                  The End                                     #
#------------------------------------------------------------------------------#
# vim: foldmethod=marker
